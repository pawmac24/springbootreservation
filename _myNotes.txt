#http://www.mkyong.com/logging/log4j-hello-world-example/


    @Modifying
    @Query(value = "update reservation set status = 2 where status = 0 and id IN " +
            "( select r.id from reservation r where current_timestamp >= create_date + (( time_interval /60 ) * interval '1 minute') )",
            nativeQuery = true)
    void updateStatusAfterExceededTime();

    //another option of update
    //reservationService.updateStatusAfterExceededTime();

    //@Query(value = "select * from Reservation r where r.CREATE_DATE = :surname", nativeQuery = true)

    /**
     select
     r.id,
     current_timestamp,
     create_date,
     (( time_interval /60 - 5 ) * interval '1 minute')
     from reservation r
     where current_timestamp >= create_date + (( time_interval /60 - 5 ) * interval '1 minute')     */

    }

==================================================
http://www.programmingforfuture.com/2010/06/using-hypersql-hsqldb.html
1. Download hsqldb in last version (2.3.2)

1. Create server.properties in hsqldb server directory
with values:

server.database.0 = file:hsqldb/hibnatedbfile
server.dbname.0 = hibnatedb

2. Run

C:\hsqldb-2.3.2\hsqldb>java -classpath lib/hsqldb.jar org.hsqldb.server.Server
it will create in hsqldb folder files hibnatedbfile

C:\hsqldb-2.3.2\hsqldb>java -classpath lib/hsqldb.jar org.hsqldb.server.Server --database.0 file:hsqldb/hibnatedbfile --dbname.0 hibnatedb

3. Run  runManagerSwing.bat in bin folder to show the data in database

======================================
Hibernate: alter table reservation drop constraint FK_fg1irhn84i2o74l62xkvdhd8p
Hibernate: drop table person if exists
Hibernate: drop table reservation if exists
Hibernate: create table person (id bigint generated by default as identity (start with 1), name varchar(255), pesel varchar(255), surname varchar(255), primary key (id))
Hibernate: create table reservation (id bigint generated by default as identity (start with 1), comment varchar(255), create_date timestamp, price numeric(19,2), status integer not null, time_interval bigint, person_id bigint, primary key (id))
Hibernate: alter table reservation add constraint FK_fg1irhn84i2o74l62xkvdhd8p foreign key (person_id) references person

Hibernate: select reservatio0_.id as id1_1_, reservatio0_.comment as comment2_1_, reservatio0_.create_date as create_d3_1_, reservatio0_.person_id as person_i7_1_, reservatio0_.price as price4_1_, reservatio0_.status as status5_1_, reservatio0_.time_interval as time_int6_1_ from reservation reservatio0_ where reservatio0_.status=?
Hibernate: insert into person (id, name, pesel, surname) values (default, ?, ?, ?)
Hibernate: select reservatio0_.id as id1_1_, reservatio0_.comment as comment2_1_, reservatio0_.create_date as create_d3_1_, reservatio0_.person_id as person_i7_1_, reservatio0_.price as price4_1_, reservatio0_.status as status5_1_, reservatio0_.time_interval as time_int6_1_ from reservation reservatio0_
Hibernate: insert into reservation (id, comment, create_date, person_id, price, status, time_interval) values (default, ?, ?, ?, ?, ?, ?)
Hibernate: insert into reservation (id, comment, create_date, person_id, price, status, time_interval) values (default, ?, ?, ?, ?, ?, ?)
Hibernate: insert into reservation (id, comment, create_date, person_id, price, status, time_interval) values (default, ?, ?, ?, ?, ?, ?)
Hibernate: insert into reservation (id, comment, create_date, person_id, price, status, time_interval) values (default, ?, ?, ?, ?, ?, ?)
Hibernate: insert into person (id, name, pesel, surname) values (default, ?, ?, ?)
Hibernate: insert into reservation (id, comment, create_date, person_id, price, status, time_interval) values (default, ?, ?, ?, ?, ?, ?)
Hibernate: insert into reservation (id, comment, create_date, person_id, price, status, time_interval) values (default, ?, ?, ?, ?, ?, ?)

#spring.datasource.url=jdbc:hsqldb:hsql://localhost/hibnatedb
#spring.datasource.username=SA
#spring.datasource.password=
#spring.datasource.driver-class-name=org.hsqldb.jdbcDriver
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
